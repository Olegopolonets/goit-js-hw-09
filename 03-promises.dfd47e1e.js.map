{"mappings":"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","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\nconst randomBtn = form.querySelector('[type=\"button\"]');\nconst backdrop = document.querySelector('.backdrop');\nconst iconClose = backdrop.querySelector('.icon-close');\n\nfunction onSubmitForm(event) {\n  event.preventDefault();\n  const amountInputValue = Number(event.target.elements.amount.value);\n  const stepInputValue = Number(event.target.elements.step.value);\n  let delayInputValue = Number(event.target.elements.delay.value);\n\n  for (let i = 0; i < amountInputValue; i++) {\n    createPromise(i, delayInputValue)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Yee-haw! Fulfilled promise ${position + 1} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Oops!… Fulfilled promise ${position + 1} in ${delay}ms`);\n      });\n    delayInputValue += stepInputValue;\n  }\n  form.reset();\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({\n          position,\n          delay,\n        });\n      } else {\n        reject({\n          position,\n          delay,\n        });\n      }\n    }, delay);\n  });\n}\n\nform.addEventListener('submit', onSubmitForm);\n\nconst amount = form.querySelector('[name=\"amount\"]');\nconst step = form.querySelector('[name=\"step\"]');\nconst delay = form.querySelector('[name=\"delay\"]');\n\nfunction isNegative(event) {\n  if (Number(event.target.value) < 0) {\n    Notify.warning(\"Marty McFly's, we can't go back in time!\");\n    event.target.value = '';\n  }\n}\namount.addEventListener('change', isNegative);\nstep.addEventListener('change', isNegative);\ndelay.addEventListener('change', isNegative);\n\nlet countClickReset = 0;\n\nrandomBtn.addEventListener('click', () => {\n  delay.value = Math.floor(Math.random() * 10 + 1) * 1000;\n  step.value = Math.floor(Math.random() * 10 + 1) * 100;\n  amount.value = Math.floor(Math.random() * 10) + 1;\n  countClickReset += 1;\n  if (countClickReset % 5 === 0) {\n    modalPay();\n  }\n});\n\nfunction modalPay() {\n  backdrop.classList.add('is-open');\n}\n\nconst modalRight = document.querySelector('.modal-right');\n\nconst formPay = modalRight.querySelector('.js-form-pay');\nconst numberCardInput = modalRight.querySelector('#person-number');\nconst expyresMonthInput = modalRight.querySelector('#expyres-month');\nconst creditExpyresYearInput = modalRight.querySelector('#input-credit-expyres-year');\nconst cardCvcInput = modalRight.querySelector('#card-cvc');\n\nconst cardDecorNumber = modalRight.querySelector('.js-card-decor-number');\nconst cardDecorMonth = modalRight.querySelector('.js-card-decor-month');\nconst cardDecorYear = modalRight.querySelector('.js-card-decor-year');\nconst cardDecorCvc = modalRight.querySelector('.js-card-decor-cvc');\n\nbackdrop.addEventListener('click', event => {\n  const target = event.target;\n  if (\n    target.classList.contains('backdrop') ||\n    target.closest('.icon-close') ||\n    target.classList.contains('js-button-no-pay')\n  ) {\n    backdrop.classList.remove('is-open');\n    Notify.info(`ZHADINA`);\n  }\n});\n\nformPay.addEventListener('input', event => {\n  cardDecorNumber.textContent = numberCardInput.value;\n  cardDecorMonth.textContent = expyresMonthInput.value;\n  cardDecorYear.textContent = creditExpyresYearInput.value;\n  cardDecorCvc.textContent = cardCvcInput.value;\n});\n\nformPay.addEventListener('submit', event => {\n  event.preventDefault();\n  Notify.success(`Thank you very much, payment is confirmed.`);\n  backdrop.remove();\n});\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$randomBtn","$47d4ff9957288465$var$backdrop","$47d4ff9957288465$var$createPromise","position","delay3","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","delay","addEventListener","event","preventDefault","amountInputValue","Number","target","elements","amount","value","stepInputValue","step","delayInputValue","i","then","delay1","Notify","success","catch","delay2","failure","reset","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$step","$47d4ff9957288465$var$delay","$47d4ff9957288465$var$isNegative","warning","$47d4ff9957288465$var$countClickReset","floor","classList","add","$47d4ff9957288465$var$modalRight","$47d4ff9957288465$var$formPay","$47d4ff9957288465$var$numberCardInput","$47d4ff9957288465$var$expyresMonthInput","$47d4ff9957288465$var$creditExpyresYearInput","$47d4ff9957288465$var$cardCvcInput","$47d4ff9957288465$var$cardDecorNumber","$47d4ff9957288465$var$cardDecorMonth","$47d4ff9957288465$var$cardDecorYear","$47d4ff9957288465$var$cardDecorCvc","contains","closest","remove","info","textContent"],"version":3,"file":"03-promises.dfd47e1e.js.map"}