{"mappings":"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","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\nconst randomBtn = form.querySelector('[type=\"button\"]');\nconst backdrop = document.querySelector('.backdrop');\nconst iconClose = backdrop.querySelector('.icon-close');\n\nfunction onSubmitForm(event) {\n  event.preventDefault();\n  const amountInputValue = Number(event.target.elements.amount.value);\n  const stepInputValue = Number(event.target.elements.step.value);\n  let delayInputValue = Number(event.target.elements.delay.value);\n\n  for (let i = 0; i < amountInputValue; i++) {\n    createPromise(i, delayInputValue)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Yee-haw! Fulfilled promise ${position + 1} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Oops!… Fulfilled promise ${position + 1} in ${delay}ms`);\n      });\n    delayInputValue += stepInputValue;\n  }\n  form.reset();\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({\n          position,\n          delay,\n        });\n      } else {\n        reject({\n          position,\n          delay,\n        });\n      }\n    }, delay);\n  });\n}\n\nform.addEventListener('submit', onSubmitForm);\n\nconst amount = form.querySelector('[name=\"amount\"]');\nconst step = form.querySelector('[name=\"step\"]');\nconst delay = form.querySelector('[name=\"delay\"]');\n\nfunction isNegative(event) {\n  if (Number(event.target.value) < 0) {\n    Notify.warning(\"Marty McFly's, we can't go back in time!\");\n    event.target.value = '';\n  }\n}\namount.addEventListener('change', isNegative);\nstep.addEventListener('change', isNegative);\ndelay.addEventListener('change', isNegative);\n\nlet countClickReset = 0;\n\nrandomBtn.addEventListener('click', () => {\n  delay.value = Math.floor(Math.random() * 10 + 1) * 1000;\n  step.value = Math.floor(Math.random() * 10 + 1) * 100;\n  amount.value = Math.floor(Math.random() * 10) + 1;\n  countClickReset += 1;\n  if (countClickReset % 5 === 0) {\n    modalPay();\n  }\n});\n\nfunction modalPay() {\n  backdrop.classList.add('is-open');\n}\n\nconst modalRight = document.querySelector('.modal-right');\n\nconst formPay = modalRight.querySelector('.js-form-pay');\nconst numberCardInput = modalRight.querySelector('#person-number');\nconst expyresMonthInput = modalRight.querySelector('#expyres-month');\nconst creditExpyresYearInput = modalRight.querySelector('#input-credit-expyres-year');\nconst cardCvcInput = modalRight.querySelector('#card-cvc');\n\nconst cardDecorNumber = modalRight.querySelector('.js-card-decor-number');\nconst cardDecorMonth = modalRight.querySelector('.js-card-decor-month');\nconst cardDecorYear = modalRight.querySelector('.js-card-decor-year');\nconst cardDecorCvc = modalRight.querySelector('.js-card-decor-cvc');\n\nbackdrop.addEventListener('click', event => {\n  const target = event.target;\n  if (\n    target.classList.contains('backdrop') ||\n    target.closest('.icon-close') ||\n    target.classList.contains('js-button-no-pay')\n  ) {\n    backdrop.classList.remove('is-open');\n    Notify.info(`ZHADINA`);\n  }\n});\n\nformPay.addEventListener('input', event => {\n  cardDecorNumber.textContent = numberCardInput.value;\n  cardDecorMonth.textContent = expyresMonthInput.value;\n  cardDecorYear.textContent = creditExpyresYearInput.value;\n  cardDecorCvc.textContent = cardCvcInput.value;\n});\n\nformPay.addEventListener('submit', event => {\n  event.preventDefault();\n  Notify.success(`Thank you very much, payment is confirmed.`);\n  backdrop.remove();\n});\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$randomBtn","$ce04d3a99e08e73b$var$backdrop","$ce04d3a99e08e73b$var$createPromise","position","delay3","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","delay","addEventListener","event","preventDefault","amountInputValue","Number","target","elements","amount","value","stepInputValue","step","delayInputValue","i","then","param","delay1","Notify","success","concat","catch","delay2","failure","reset","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$delay","$ce04d3a99e08e73b$var$isNegative","warning","$ce04d3a99e08e73b$var$countClickReset","floor","classList","add","$ce04d3a99e08e73b$var$modalRight","$ce04d3a99e08e73b$var$formPay","$ce04d3a99e08e73b$var$numberCardInput","$ce04d3a99e08e73b$var$expyresMonthInput","$ce04d3a99e08e73b$var$creditExpyresYearInput","$ce04d3a99e08e73b$var$cardCvcInput","$ce04d3a99e08e73b$var$cardDecorNumber","$ce04d3a99e08e73b$var$cardDecorMonth","$ce04d3a99e08e73b$var$cardDecorYear","$ce04d3a99e08e73b$var$cardDecorCvc","contains","closest","remove","info","textContent"],"version":3,"file":"03-promises.b1e98dac.js.map"}